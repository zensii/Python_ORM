# Generated by Django 5.0.4 on 2025-01-08 12:35
# makemigrations main_app --name migrate_unique_brands --empty

from django.db import migrations

def create_unique_brands(apps, schema_editor):
    shoe = apps.get_model('main_app', 'Shoe')
    unique_brands = apps.get_model('main_app', 'UniqueBrands')
    unique_brand_names = shoe.objects.values_list('brand', flat=True).distinct() # results in a list of unique brands

    # for brand in unique_brand_names:
    #     unique_brands.create(brand_name=brand)     - this solution is not optimal as it sends a query per loop

    unique_brands.objects.bulk_create([unique_brands(brand_name=unique_brand) for unique_brand in unique_brand_names])

def reverse_create_unique_brands(apps, schema_editor):
    unique_brands = apps.get_model('main_app', 'UniqueBrands')
    unique_brands.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0002_uniquebrands'),
    ]

    operations = [migrations.RunPython(create_unique_brands, reverse_create_unique_brands)
    ]
